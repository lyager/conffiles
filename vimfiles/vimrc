let mapleader = ";"
set ignorecase                " When searching without case, use smartcase which matches both capitalized
set smartcase                 " and not capitalized letters
set listchars=tab:>.,trail:.  " Prefer to have identation pointed out too.
set hls                       " Hilight Search ( not a big fan of inrementals search though ) 
set cscopetag                 " Use cscope instead of ctags
set cscopeverbose
set backspace=2
syntax on

""" Gnu GLOBAL Tags
nmap <C-\>] :GtagsCursor<CR>
nmap <C-\>s :Gtags -r <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>S :Gtags -s <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>f :Gtags -f <C-R>=expand("%")<CR><CR>
nmap <C-\>u :!gtags<CR><CR>

""" Ctags
command! -nargs=0 Ctags :!ctags -R --extra=+f

command! Ww w !sudo tee % > /dev/null

" When working with other peoples files and indent styles
" it's nice to be able to put .exrc files or use modelines in 
" a specific file
set modelines=5
set exrc
set secure

set nofoldenable " Do not fold to begin with

""" Vimgrep keys
set grepprg=grep\ --binary-files=without-match\ --exclude=GTAGS\ --exclude=GRTAGS\ --exclude=\\*cscope.out\\*\ --exclude=\\*tags\\*\ --exclude=\\*.svn\\*\ -n\ $*\ /dev/null
map <leader>G :grep -r <cword> *
map <leader>g :grep -r  *<left><left>
" map <leader>Ga :bufdo vimgrepadd <cword> % \| copen
" map <leader>ga :bufdo vimgrepadd  % \| copen <left><left><left><left><left><left><left><left><left><left><left>

""" Tab navigation
nnoremap <leader>tr :tabnew <bar>r !
nnoremap <leader>tR :tabnew <bar>r !#<CR>
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
map <leader>t<leader> :tabnext


" Let 'tl' toggle between this and the last accessed tab
let g:lasttab = 1
nmap <Leader>tl :exe "tabn ".g:lasttab<CR>
au TabLeave * let g:lasttab = tabpagenr()

map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/

""" Disable increment/decrement of integer below cursor , I keep hitting CTRL-a for some reason :-/
nmap <CTRL-A> <Nop>
nmap <CTRL-X> <Nop>

""" Filetypes
autocmd BufNew,BufRead SConstruct setf python

""" Markdown
autocmd Filetype mkd set tw=78

""" C++/C
function! s:insert_gates()
  let gatename = "__" . substitute(toupper(expand("%:t")), "\\.", "_", "g") . "__"
  execute "normal! i#ifndef " . gatename
  execute "normal! o#define " . gatename . " "
  execute "normal! Go#endif /* " . gatename . " */"
  normal! kk
endfunction
autocmd BufNewFile *.{h,hpp} call <SID>insert_gates()

""" Diff

function! DiffFold(lnum)
  let line = getline(a:lnum)
  if line =~ '^\(diff\|---\|+++\|@@\) '
    return 1
  elseif line[0] =~ '[-+ ]'
    return 2
  else
    return 0
  endif
endfunction
au FileType diff set foldmethod=expr foldexpr=DiffFold(v:lnum)

""" Java
au FileType java set foldmethod=indent



""" Ultisnips
" Trigger configuration. Do not use <tab> if you use
" https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
let g:ultisnips_python_style="google"


""" YouCompleteMe
" Disable completion previews with function prototypes, etc.
set completeopt=menu
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_auto_trigger = 0
let g:ycm_filetype_blacklist = { 'python': 1 }
let g:ycm_complete_in_strings = 0

""" Python Mode - can take up quite alot of CPU, and I don't use 
""" code completion from Rope anyway
let g:pymode_rope = 0

"""""""""""""""""""""""""""""""
" Vundle - below this point
"""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Most Recent Used
Plugin 'yegappan/mru'

" YouCompleteMe: https://github.com/Valloric/YouCompleteMe
Plugin 'Valloric/YouCompleteMe'

" CtrlP - nice navigation
Plugin 'https://github.com/kien/ctrlp.vim'
map <leader>j :CtrlP<cr>
map <leader>J :CtrlP<cr>

" Switch between Header and source https://github.com/derekwyatt/vim-fswitch
Plugin 'https://github.com/derekwyatt/vim-fswitch'
nmap <silent> <Leader>h :FSHere<cr>

" BufExplorer
Plugin 'corntrace/bufexplorer'
nmap <leader>o :BufExplorer<cr>

" Python PEP-8 Indentation
" -- reworked because python-mode comes with it's own version of
"    vim-python-pep8-indent bundlede
" Plugin 'https://github.com/hynek/vim-python-pep8-indent'

" Python Mode
Plugin 'https://github.com/lyager/python-mode'

" Doxygen Toolkit
Plugin 'vim-scripts/DoxygenToolkit.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'

" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'

" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" vim-markdown (Tabular dependency)
Plugin 'godlygeek/tabular'
Plugin 'lyager/vim-markdown'

" Gtags
Plugin 'gtags.vim'

" Ultisnips
Plugin 'sirver/ultisnips'
" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'
" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

" Git Gutter
Plugin 'airblade/vim-gitgutter'

" Airline (experimental)
Plugin 'bling/vim-airline'


" Syntastic (experimental)
Plugin 'scrooloose/syntastic'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

